(defpoll time :interval "1s"
  "date '+%H:%M:%S'")

(deflisten windowName :initial "whatever"
  `~/.config/eww/scripts/custom/sway-testing-with-ipc`)

(deflisten workspaces_listen :initial "Yay"
  "~/scripts/rust/sway-testing-with-ipc/target/release/sway-testing-with-ipc") 

(defwidget widg [class value al]
  (box :class "${class} widg" :space-evenly: false :style "margin-left: 1em;" :halign "${al}"
    "${value}"))

(defwidget workspaces []
  (literal :content workspaces_listen))

(defwidget windowName [] 
  (box :orientation "h" :halign "center" :class "windowName"  :hexpand false :vexpand false
    "${windowName}"))

(defwidget sidestuff []
  (box :orientation "h" :halign "end" :class "sidestuff"
     (widg :value "${time}" :class "noice" :al "end") 
    (widg :value "ram: ${EWW_RAM.used_mem_perc}%" :class "ram" :al "end"))) 
    

(defwidget bar []
  (box :class "bar" :orientation "h" :space-evenly false :hexpand false :vexpand false
    (workspaces)
    (windowName)
    (sidestuff)))
    ; (widg :value "${windowName}" :class "windowName" :al "start")
    
   

(defwindow example
          :monitor 0
          :geometry (geometry :x "0%"
                          :y "00px"
                          :width "100%"
                          :height "20px"
                          :anchor "top center")
          :stacking "fg"
          :exclusive true
          :windowtype "dock"
  (bar))
